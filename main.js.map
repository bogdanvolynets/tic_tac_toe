{"version":3,"sources":["webpack://tic_tac_toe/./src/styles.scss?18b3","webpack://tic_tac_toe/webpack/bootstrap","webpack://tic_tac_toe/webpack/runtime/make namespace object","webpack://tic_tac_toe/./src/index.js"],"names":["Player","sign","gameBoard","board","setField","index","getField","getAiField","randomNumber","Math","floor","random","reset","i","length","displayController","cells","document","querySelectorAll","playersMove","querySelector","restartBtn","forEach","e","addEventListener","textContent","gameController","gameOver","getSign","getAttribute","checkForGameOver","setTimeout","determineMove","alert","gameMode","getGameMode","oddRound","aiSign","aiField","setPlayersMoveText","player","getWinnerSign","restartGame","setNewRound","playerOne","playerTwo","round","currentSign","winnerSign","isWin","checkWin","cell1","cell2","cell3","humanMode","aiMode"],"mappings":"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","file":"main.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './styles.scss';\r\n\r\n// Create Player object(X, O) using factory function\r\nconst Player = (sign) => {\r\n    return { sign };\r\n}\r\n\r\n\r\nconst gameBoard = (() => {\r\n    // Create array that immitates tic tac toe board\r\n    const board = ['','','','','','','','',''];\r\n\r\n    // Assign elements to the board array\r\n    const setField = (index, sign) => {\r\n        board[index] = sign;\r\n    }\r\n\r\n    // Get value from the board array\r\n    const getField = (index) => board[index];\r\n\r\n    // Create random number from 0 to 8,\r\n    // return array item(board cell) with index of this number, \r\n    // check if its empty, if not repeat function\r\n    // if empty - return this cell\r\n    const getAiField = () => {\r\n        const randomNumber = Math.floor(\r\n            Math.random() * 9\r\n        );\r\n\r\n        return board[randomNumber] !== '' ? getAiField() : randomNumber;\r\n    }\r\n\r\n    // replace board array items with empty strings (clear board)\r\n    const reset = () => {\r\n        for(let i = 0; i < board.length; i++) {\r\n            board[i] = '';\r\n        }\r\n    }\r\n\r\n    return { setField, getField, getAiField, reset };\r\n})();\r\n\r\nconst displayController = (() => {\r\n    const cells = [...document.querySelectorAll('#gameBoard div')];\r\n    const playersMove = document.querySelector('#playersMove');\r\n    const restartBtn = document.querySelector('#restart');\r\n    \r\n    cells.forEach(e => e.addEventListener('click', () => {\r\n        if (e.textContent === '' && gameController.gameOver() === false) {\r\n            e.textContent = gameController.getSign();\r\n            gameBoard.setField(e.getAttribute('data-position'), e.textContent);\r\n            checkForGameOver();\r\n            setTimeout(determineMove(), 300);\r\n        }\r\n        else if (gameController.gameOver() === false) { \r\n            alert('This cell is already taken, please select another one'); \r\n        }\r\n        else { \r\n            alert(`Game is Over, please restart`); \r\n        }\r\n    }));\r\n\r\n    const determineMove = () => {\r\n        if (gameMode.getGameMode() === 'ai' && gameController.oddRound() === false) { \r\n            const aiSign = gameController.getSign(); \r\n            const aiField = gameBoard.getAiField();\r\n\r\n            cells[aiField].textContent = aiSign;\r\n            gameBoard.setField(aiField, aiSign);\r\n            checkForGameOver();\r\n        }\r\n    }\r\n\r\n    const setPlayersMoveText = player => {\r\n        playersMove.textContent = `Player ${player}'s Turn`;\r\n    }\r\n\r\n    const checkForGameOver = () => {\r\n        if(gameController.gameOver() === true) {\r\n            playersMove.textContent = `Player ${gameController.getWinnerSign()} Has Won`;\r\n        } else if (gameController.gameOver() === \"tie\") {\r\n            playersMove.textContent = `That's a tie`;\r\n        }\r\n    }\r\n\r\n    const restartGame = () => {\r\n        gameBoard.reset();\r\n        gameController.setNewRound();\r\n        playersMove.textContent = `Player X's Turn`;\r\n        for (let i=0; i<cells.length; i++) {\r\n            cells[i].textContent = '';\r\n        }\r\n    }\r\n\r\n    restartBtn.addEventListener('click', restartGame);\r\n\r\n    return { setPlayersMoveText, restartGame };\r\n})();\r\n\r\nconst gameController = (() => {\r\n    const playerOne = Player('X');\r\n    const playerTwo = Player('O');\r\n    let round = 1;\r\n    let currentSign = null;\r\n    let winnerSign = null;\r\n    let isWin = false;\r\n\r\n    const getSign = () => {\r\n        if (round % 2 === 0) {\r\n            currentSign = playerTwo.sign;\r\n            displayController.setPlayersMoveText(playerOne.sign);\r\n        }\r\n        else {\r\n            currentSign = playerOne.sign;\r\n            displayController.setPlayersMoveText(playerTwo.sign);\r\n        }\r\n        round++;\r\n        return currentSign;\r\n    }\r\n\r\n    const getWinnerSign = () => winnerSign;\r\n\r\n    // chick if round number is odd\r\n    const oddRound = () => round % 2 === 0 ? false : true;\r\n\r\n    const setNewRound = () => round = 1;\r\n\r\n    const checkWin = (cell1, cell2, cell3) => {\r\n        if (gameBoard.getField(cell1) !== '' &&\r\n            gameBoard.getField(cell2) !== '' &&\r\n            gameBoard.getField(cell3) !== '' &&\r\n            gameBoard.getField(cell1) === gameBoard.getField(cell2) && \r\n            gameBoard.getField(cell1) === gameBoard.getField(cell3)) {\r\n            winnerSign = gameBoard.getField(cell1);\r\n            return true;\r\n        }\r\n        else { \r\n            return false;\r\n        }\r\n    }\r\n\r\n    const gameOver = () => {\r\n        isWin = checkWin(0,1,2)\r\n            || checkWin(3,4,5)\r\n            || checkWin(6,7,8)\r\n            || checkWin(0,3,6)\r\n            || checkWin(1,4,7)\r\n            || checkWin(2,5,8)\r\n            || checkWin(0,4,8)\r\n            || checkWin(6,4,2);\r\n        if (round === 10 && isWin === false) {\r\n            isWin = \"tie\";\r\n        }\r\n        return isWin;\r\n    }\r\n\r\n    return { getSign, getWinnerSign, oddRound, setNewRound, gameOver };\r\n})();\r\n\r\nconst gameMode = (() => {\r\n    const humanMode = document.querySelector('#humanMode');\r\n    const aiMode = document.querySelector('#AIMode');\r\n    let gameMode = 'human';\r\n    const getGameMode = () => gameMode;\r\n\r\n    humanMode.addEventListener('click', () => {\r\n        displayController.restartGame();\r\n        gameMode = 'human';\r\n    });\r\n\r\n    aiMode.addEventListener('click', () => {\r\n        displayController.restartGame();\r\n        gameMode = 'ai';\r\n    });\r\n    \r\n    return { getGameMode };\r\n})();"],"sourceRoot":""}